{{- if (not .Values.enableGangScheduler) -}}
{{- if .Values.useTensorboard }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-tensorboard
  labels:
    app: {{ template "tfjob.name" . }}
    chart: {{ template "tfjob.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    createdBy: "TFJob"
    role: tensorboard
spec:
  template:
    metadata:
      labels:
        app: {{ template "tfjob.name" . }}
        chart: {{ template "tfjob.chart" . }}
        release: {{ .Release.Name }}
        role: tensorboard
    spec:
      {{- if .Values.ps }}
      {{- if .Values.hasGangScheduler }}
      {{- if .Values.enableGangScheduler }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      {{- end }}
      {{- end }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values: 
                  - {{ template "tfjob.name" . }}
              - key: release
                operator: In
                values: 
                  - {{ .Release.Name }}
              {{- if .Values.chief }}
              - key: tf-replica-type
                operator: In
                values: 
                  - "chief"
              {{- else }}
              - key: tf-replica-index
                operator: In
                values: 
                  - "0"
              - key: tf-replica-type
                operator: In
                values: 
                  - "worker"
              {{- end }}
            topologyKey: kubernetes.io/hostname
      volumes:
        {{- if .Values.isLocalLogging }}
        - hostPath:
            path: "{{ .Values.hostLogPath }}"
          name: training-logs-volume
        {{- end }}
        {{- if (not .Values.isLocalLogging) }}
        {{- if .Values.dataset }}   
        {{- range $pvcName, $destPath := .Values.dataset }}
        - name: "{{ $pvcName }}"
          persistentVolumeClaim:
            claimName: "{{ $pvcName }}"
        {{- end }}
        {{- end }}
        {{- end }}
      containers:
      - name: tensorboard      
        {{- if .Values.isLocalLogging }}
        command: ["tensorboard", "--logdir", "/output/training_logs",  "--host",  "0.0.0.0"]
        {{- else}}
        command: ["tensorboard", "--logdir", "{{ .Values.trainingLogdir }}",  "--host",  "0.0.0.0"]
        {{- end }}
        image: "{{ .Values.tensorboardImage }}"
        imagePullPolicy: {{ .Values.tensorboardImagePullpolicy }}
        ports:
        - containerPort: 6006
        volumeMounts:
        {{- if .Values.isLocalLogging }}
        - mountPath: /output/training_logs
          name: training-logs-volume
        {{- else }}
        {{- if .Values.dataset }}   
        {{- range $pvcName, $destPath := .Values.dataset }}
        - name: "{{ $pvcName }}"
          mountPath: "{{ $destPath }}"
        {{- end }}
        {{- end }}
        {{- end }}
{{- end }}
{{- end }}